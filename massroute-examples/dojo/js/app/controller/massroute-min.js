dojo.provide("controller.massroute");dojo.require("model.session");dojo.require("service.mbta");dojo.declare("controller.massroute.MassRouteController",null,{constructor:function(c,a){var b=this;this._session=c;this._service=a},_hasRoutes:function(){return(typeof this._session.routes!="undefined")&&(this._session.routes.length>0)},_hasConfig:function(a){return this._session.getConfig(a)!==undefined},_updateSessionOnConfiguration:function(a,b){this._session.addConfig(a,b.raw);this._session.currentConfiguration=b},getRoutes:function(){var a=this,b=new dojo.Deferred();console.log("["+this.toString()+"] :: getRoutes()");if(a._hasRoutes()){console.log("["+this.toString()+"] :: from cache.");b.resolve(a._session.routes)}else{this._service.getRoutes({result:function(c){console.log("["+a.toString()+"] :: getRoutes.result");a._session.routes=c;b.resolve(c)},fault:function(c){console.log("["+a.toString()+"] :: getRoutes.fault");b.reject(c)}})}return b},getConfig:function(b){var a=this,c=new dojo.Deferred(),d=undefined;console.log("["+this.toString()+"] :: getConfig() for "+b+".");if(this._hasConfig(b)){console.log("["+this.toString()+"] :: from cache.");d=this._session.createConfig(this._session.getConfig(b));this._updateSessionOnConfiguration(b,d);c.resolve(d)}else{this._service.getConfig(b,{result:function(e){console.log("["+a.toString()+"] :: getConfig.result");dojo.hitch(a,a._updateSessionOnConfiguration)(b,e);c.resolve(e)},fault:function(e){console.log("["+a.toString()+"] :: getConfig.fault");c.reject(e)}})}return c},getStops:function(d){var a,c=this._session.currentConfiguration,b=new dojo.Deferred();console.log("["+this.toString()+"] :: getStops() for "+d+".");if((typeof c!="undefined")){console.log("["+this.toString()+"] :: from cache.");a=c.findDestinationByTag(d);if((typeof a!="undefined")){console.log("["+this.toString()+"] :: getStops() going to "+a.title+".");b.resolve(c.stopsForDestination(a))}else{b.reject("Could not find stops for "+d+". No destination found related to value.")}}else{b.reject("Could not find stops for "+d+". No configuration in current session.")}return b},getPredictions:function(f){var b=this,a,c,e=this._session.currentConfiguration,d=new dojo.Deferred();if((typeof e!="undefined")){a=e.route;c=e.findStopFromTag(f);if((typeof a!="undefined")&&(typeof c!="undefined")){console.log("["+this.toString()+"] :: getPredictions for "+c.tag+" along "+a.tag);this._service.getPredictions(a.tag,c.tag,{result:function(g){console.log("["+b.toString()+"] :: getPredictions.result");d.resolve(g)},fault:function(g){console.log("["+b.toString()+"] :: getPredictions.fault");d.reject(g)}})}else{d.reject("Could not find predictions for "+f+". No stop found related to value.")}}else{d.reject("Could not find predictions for "+f+". No configuration in current session.")}return d},toString:function(){return"controller.massroute.MassRouteController"}});